{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"Login\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\"),\n      password: yup.string().required(\"Password is required!\")\n    });\n    return {\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  created() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n  },\n  methods: {\n    handleLogin(user) {\n      this.loading = true;\n      this.$store.dispatch(\"auth/login\", user).then(() => {\n        this.$router.push(\"/profile\");\n      }, error => {\n        this.loading = false;\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    }\n  }\n};","map":{"version":3,"names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","password","loading","message","computed","loggedIn","$store","state","auth","status","created","$router","push","methods","handleLogin","user","dispatch","then","error","response","toString"],"sources":["C:\\Users\\USER\\Desktop\\공부\\vue\\bezkoder\\6-vue-jwt-authentication-vuex-vueRouter\\vue-3-authentication-jwt\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card card-container\">\r\n            <img\r\n                id=\"profile-img\" \r\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" \r\n                class=\"profile-img-card\"\r\n            />\r\n            <Form @submit=\"handleLogin\" :validation-schema=\"schema\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <Field name=\"username\" type=\"text\" class=\"form-control\" />\r\n                    <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <Field name=\"password\" type=\"password\" class=\"form-control\" />\r\n                    <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n                </div>\r\n\r\n                <div class=\"from-group\">\r\n                    <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n                        <span\r\n                            v-show=\"loading\" \r\n                            class=\"spinner-border spinner-border-sm\"\r\n                        ></span>\r\n                        <span>Login</span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <div v-if=\"message\" class=\"alert alert-danger\" role=\"alert\">\r\n                        {{ message }}\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\n\r\nexport default {\r\n    name: \"Login\",\r\n    components: {\r\n        Form,\r\n        Field,\r\n        ErrorMessage\r\n    },\r\n    data() {\r\n        const schema = yup.object().shape({\r\n            username: yup.string().required(\"Username is required!\"),\r\n            password: yup.string().required(\"Password is required!\"),\r\n        });\r\n\r\n        return {\r\n            loading: false,\r\n            message: \"\",\r\n            schema,    \r\n        }\r\n    },\r\n    computed: {\r\n        loggedIn() {\r\n            return this.$store.state.auth.status.loggedIn;\r\n        },\r\n    },\r\n    created() {\r\n        if (this.loggedIn) {\r\n            this.$router.push(\"/profile\");\r\n        }\r\n    },\r\n    methods: {\r\n        handleLogin(user) {\r\n            this.loading = true;\r\n\r\n            this.$store.dispatch(\"auth/login\", user).then(\r\n                () => {\r\n                    this.$router.push(\"/profile\");\r\n                },\r\n                (error) => {\r\n                    this.loading = false;\r\n                    this.message = \r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                }\r\n            );\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";AAyCA,SAASA,IAAI,EAAEC,KAAK,EAAEC,YAAW,QAAS,cAAc;AACxD,OAAO,KAAKC,GAAE,MAAO,KAAK;AAE1B,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACRL,IAAI;IACJC,KAAK;IACLC;EACJ,CAAC;EACDI,IAAIA,CAAA,EAAG;IACH,MAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAM,EAAE,CAACC,KAAK,CAAC;MAC9BC,QAAQ,EAAEP,GAAG,CAACQ,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACxDC,QAAQ,EAAEV,GAAG,CAACQ,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB;IAC3D,CAAC,CAAC;IAEF,OAAO;MACHE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXR;IACJ;EACJ,CAAC;EACDS,QAAQ,EAAE;IACNC,QAAQA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IACjD;EACJ,CAAC;EACDK,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACL,QAAQ,EAAE;MACf,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IACjC;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAACC,IAAI,EAAE;MACd,IAAI,CAACb,OAAM,GAAI,IAAI;MAEnB,IAAI,CAACI,MAAM,CAACU,QAAQ,CAAC,YAAY,EAAED,IAAI,CAAC,CAACE,IAAI,CACzC,MAAM;QACF,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;MACjC,CAAC,EACAM,KAAK,IAAK;QACP,IAAI,CAAChB,OAAM,GAAI,KAAK;QACpB,IAAI,CAACC,OAAM,GACNe,KAAK,CAACC,QAAO,IACVD,KAAK,CAACC,QAAQ,CAACzB,IAAG,IAClBwB,KAAK,CAACC,QAAQ,CAACzB,IAAI,CAACS,OAAO,IAC/Be,KAAK,CAACf,OAAM,IACZe,KAAK,CAACE,QAAQ,EAAE;MACxB,EACH;IACL;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}